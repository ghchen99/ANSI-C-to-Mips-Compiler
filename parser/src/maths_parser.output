Nonterminals useless in grammar

   T_EXP
   T_LOG
   T_SQRT


Rules useless in parser due to conflicts

    8 TYPE_NAME: %empty


State 0 conflicts: 4 shift/reduce
State 2 conflicts: 4 shift/reduce
State 9 conflicts: 4 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: EXPR

    2 EXPR: TERM

    3 TERM: FACTOR

    4 FACTOR: T_NUMBER
    5       | T_LBRACKET EXPR T_RBRACKET
    6       | T_VARIABLE
    7       | TYPE_NAME EXPR

    8 TYPE_NAME: %empty
    9          | T_INT


Terminals, with rules where they appear

$end (0) 0
error (256)
T_INT (258) 9
T_LBRACKET (259) 5
T_RBRACKET (260) 5
T_NUMBER (261) 4
T_VARIABLE (262) 6


Nonterminals, with rules where they appear

$accept (8)
    on left: 0
ROOT (9)
    on left: 1, on right: 0
EXPR (10)
    on left: 2, on right: 1 5 7
TERM (11)
    on left: 3, on right: 2
FACTOR (12)
    on left: 4 5 6 7, on right: 3
TYPE_NAME (13)
    on left: 8 9, on right: 7


State 0

    0 $accept: . ROOT $end

    T_INT       shift, and go to state 1
    T_LBRACKET  shift, and go to state 2
    T_NUMBER    shift, and go to state 3
    T_VARIABLE  shift, and go to state 4

    T_INT       [reduce using rule 8 (TYPE_NAME)]
    T_LBRACKET  [reduce using rule 8 (TYPE_NAME)]
    T_NUMBER    [reduce using rule 8 (TYPE_NAME)]
    T_VARIABLE  [reduce using rule 8 (TYPE_NAME)]

    ROOT       go to state 5
    EXPR       go to state 6
    TERM       go to state 7
    FACTOR     go to state 8
    TYPE_NAME  go to state 9


State 1

    9 TYPE_NAME: T_INT .

    $default  reduce using rule 9 (TYPE_NAME)


State 2

    5 FACTOR: T_LBRACKET . EXPR T_RBRACKET

    T_INT       shift, and go to state 1
    T_LBRACKET  shift, and go to state 2
    T_NUMBER    shift, and go to state 3
    T_VARIABLE  shift, and go to state 4

    T_INT       [reduce using rule 8 (TYPE_NAME)]
    T_LBRACKET  [reduce using rule 8 (TYPE_NAME)]
    T_NUMBER    [reduce using rule 8 (TYPE_NAME)]
    T_VARIABLE  [reduce using rule 8 (TYPE_NAME)]

    EXPR       go to state 10
    TERM       go to state 7
    FACTOR     go to state 8
    TYPE_NAME  go to state 9


State 3

    4 FACTOR: T_NUMBER .

    $default  reduce using rule 4 (FACTOR)


State 4

    6 FACTOR: T_VARIABLE .

    $default  reduce using rule 6 (FACTOR)


State 5

    0 $accept: ROOT . $end

    $end  shift, and go to state 11


State 6

    1 ROOT: EXPR .

    $default  reduce using rule 1 (ROOT)


State 7

    2 EXPR: TERM .

    $default  reduce using rule 2 (EXPR)


State 8

    3 TERM: FACTOR .

    $default  reduce using rule 3 (TERM)


State 9

    7 FACTOR: TYPE_NAME . EXPR

    T_INT       shift, and go to state 1
    T_LBRACKET  shift, and go to state 2
    T_NUMBER    shift, and go to state 3
    T_VARIABLE  shift, and go to state 4

    T_INT       [reduce using rule 8 (TYPE_NAME)]
    T_LBRACKET  [reduce using rule 8 (TYPE_NAME)]
    T_NUMBER    [reduce using rule 8 (TYPE_NAME)]
    T_VARIABLE  [reduce using rule 8 (TYPE_NAME)]

    EXPR       go to state 12
    TERM       go to state 7
    FACTOR     go to state 8
    TYPE_NAME  go to state 9


State 10

    5 FACTOR: T_LBRACKET EXPR . T_RBRACKET

    T_RBRACKET  shift, and go to state 13


State 11

    0 $accept: ROOT $end .

    $default  accept


State 12

    7 FACTOR: TYPE_NAME EXPR .

    $default  reduce using rule 7 (FACTOR)


State 13

    5 FACTOR: T_LBRACKET EXPR T_RBRACKET .

    $default  reduce using rule 5 (FACTOR)
